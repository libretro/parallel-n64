RSPDIR             = $(ROOT_DIR)/mupen64plus-rsp-hle
CXD4DIR            = $(ROOT_DIR)/mupen64plus-rsp-cxd4
AUDIO_LIBRETRO_DIR = $(ROOT_DIR)/mupen64plus-audio-libretro
INPUT_LIBRETRO_DIR = $(ROOT_DIR)/mupen64plus-input-libretro
CORE_DIR           = $(ROOT_DIR)/mupen64plus-core
VIDEODIR_RICE      = $(ROOT_DIR)/gles2rice/src
VIDEODIR_GLN64     = $(ROOT_DIR)/gles2n64/src
VIDEODIR_ANGRYLION = $(ROOT_DIR)/mupen64plus-video-angrylion

ifeq ($(GLIDE2GL), 1)
VIDEODIR_GLIDE = $(ROOT_DIR)/glide2gl/src
else
VIDEODIR_GLIDE = $(ROOT_DIR)/gles2glide64/src
endif

ifeq ($(GLIDE64MK2), 1)
VIDEODIR_GLIDE = $(ROOT_DIR)/mupen64plus-video-glide64mk2/src
endif

INCFLAGS += \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/src/api \
	-I$(AUDIO_LIBRETRO_DIR) \
	-I$(VIDEODIR_GLIDE)/Glitch64/inc \
	-I$(LIBRETRO_DIR)/libco \
	-I$(LIBRETRO_DIR)

# libco
SOURCES_C += $(LIBRETRO_DIR)/libco/libco.c

SOURCES_C += $(RSPDIR)/src/alist.c \
    $(RSPDIR)/src/alist_audio.c \
    $(RSPDIR)/src/alist_naudio.c \
    $(RSPDIR)/src/alist_nead.c \
    $(RSPDIR)/src/audio.c \
    $(RSPDIR)/src/cicx105.c \
    $(RSPDIR)/src/hle.c \
    $(RSPDIR)/src/jpeg.c \
    $(RSPDIR)/src/hle_memory.c \
    $(RSPDIR)/src/mp3.c \
    $(RSPDIR)/src/musyx.c \
    $(RSPDIR)/src/hle_plugin.c

SOURCES_C += $(CXD4DIR)/rsp.c

# Core
SOURCES_C += \
	$(CORE_DIR)/src/api/callbacks.c \
	$(CORE_DIR)/src/api/common.c \
	$(CORE_DIR)/src/api/config.c \
	$(CORE_DIR)/src/api/frontend.c \
	$(CORE_DIR)/src/api/vidext_libretro.c \
	$(CORE_DIR)/src/main/cheat.c \
	$(CORE_DIR)/src/main/eventloop.c \
	$(CORE_DIR)/src/main/main.c \
	$(CORE_DIR)/src/main/profile.c \
	$(CORE_DIR)/src/main/md5.c \
	$(CORE_DIR)/src/main/rom.c \
	$(CORE_DIR)/src/main/savestates.c \
	$(CORE_DIR)/src/main/util.c \
	$(CORE_DIR)/src/memory/m64p_memory.c \
	$(CORE_DIR)/src/si/n64_cic_nus_6105.c \
	$(CORE_DIR)/src/si/pif.c \
	$(CORE_DIR)/src/si/af_rtc.c \
	$(CORE_DIR)/src/si/cic.c \
	$(CORE_DIR)/src/si/eeprom.c \
	$(CORE_DIR)/src/si/game_controller.c \
	$(CORE_DIR)/src/si/mempak.c \
	$(CORE_DIR)/src/si/rumblepak.c \
	$(CORE_DIR)/src/plugin/plugin.c \
	$(CORE_DIR)/src/plugin/emulate_game_controller_via_input_plugin.c \
	$(CORE_DIR)/src/plugin/get_time_using_C_localtime.c \
	$(CORE_DIR)/src/plugin/rumble_via_input_plugin.c \
	$(CORE_DIR)/src/r4300/mi_controller.c \
	$(CORE_DIR)/src/r4300/profile.c \
	$(CORE_DIR)/src/r4300/recomp.c \
	$(CORE_DIR)/src/r4300/exception.c \
	$(CORE_DIR)/src/r4300/cached_interp.c \
	$(CORE_DIR)/src/r4300/pure_interp.c \
	$(CORE_DIR)/src/r4300/reset.c \
	$(CORE_DIR)/src/ri/ri_controller.c \
	$(CORE_DIR)/src/ri/rdram.c \
	$(CORE_DIR)/src/si/si_controller.c \
	$(CORE_DIR)/src/vi/vi_controller.c \
	$(CORE_DIR)/src/rdp/rdp_core.c \
	$(CORE_DIR)/src/rdp/fb.c \
	$(CORE_DIR)/src/rsp/rsp_core.c \
	$(CORE_DIR)/src/ai/ai_controller.c \
	$(CORE_DIR)/src/pi/pi_controller.c \
	$(CORE_DIR)/src/pi/sram.c \
	$(CORE_DIR)/src/pi/flashram.c \
	$(CORE_DIR)/src/pi/cart_rom.c \
	$(CORE_DIR)/src/r4300/interupt.c \
	$(CORE_DIR)/src/r4300/tlb.c \
	$(CORE_DIR)/src/r4300/cp0.c \
	$(CORE_DIR)/src/r4300/cp1.c \
	$(CORE_DIR)/src/r4300/r4300_core.c \
	$(CORE_DIR)/src/r4300/r4300.c

#	$(CORE_DIR)/src/api/debugger.c \
#	$(CORE_DIR)/src/main/ini_reader.c \

### DYNAREC ###
ifdef WITH_DYNAREC
	DYNAFLAGS += -DDYNAREC
	ifeq ($(WITH_DYNAREC), arm)
		DYNAFLAGS += -DNEW_DYNAREC=3

		SOURCES_C += $(CORE_DIR)/src/r4300/new_dynarec/new_dynarec.c \
		$(CORE_DIR)/src/r4300/empty_dynarec.c \
		$(CORE_DIR)/src/r4300/instr_counters.c

		SOURCES_ASM += \
			$(CORE_DIR)/src/r4300/new_dynarec/linkage_$(WITH_DYNAREC).S

	else
		CPUFLAGS += -msse -msse2 -DUSE_MMX_DECODES -DUSE_SSE_SUPPORT
		SOURCES_C += $(wildcard $(CORE_DIR)/src/r4300/$(WITH_DYNAREC)/*.c)
	endif
else
	SOURCES_C += $(CORE_DIR)/src/r4300/empty_dynarec.c
endif

### VIDEO PLUGINS ###

# Rice

SOURCES_CXX += $(VIDEODIR_RICE)/Blender.cpp \
            $(VIDEODIR_RICE)/Combiner.cpp \
            $(VIDEODIR_RICE)/RiceConfig.cpp \
            $(VIDEODIR_RICE)/ConvertImage16.cpp \
            $(VIDEODIR_RICE)/ConvertImage.cpp \
            $(VIDEODIR_RICE)/RiceDebugger.cpp \
            $(VIDEODIR_RICE)/DecodedMux.cpp \
            $(VIDEODIR_RICE)/DeviceBuilder.cpp \
            $(VIDEODIR_RICE)/FrameBuffer.cpp \
            $(VIDEODIR_RICE)/GraphicsContext.cpp \
            $(VIDEODIR_RICE)/OGLCombiner.cpp \
            $(VIDEODIR_RICE)/OGLDecodedMux.cpp \
            $(VIDEODIR_RICE)/OGLES2FragmentShaders.cpp \
            $(VIDEODIR_RICE)/OGLExtCombiner.cpp \
            $(VIDEODIR_RICE)/OGLExtRender.cpp \
            $(VIDEODIR_RICE)/OGLGraphicsContext.cpp \
            $(VIDEODIR_RICE)/OGLRender.cpp \
            $(VIDEODIR_RICE)/OGLRenderExt.cpp \
            $(VIDEODIR_RICE)/OGLTexture.cpp \
            $(VIDEODIR_RICE)/RenderBase.cpp \
            $(VIDEODIR_RICE)/Render.cpp \
            $(VIDEODIR_RICE)/RenderExt.cpp \
            $(VIDEODIR_RICE)/RenderTexture.cpp \
            $(VIDEODIR_RICE)/RSP_Parser.cpp \
            $(VIDEODIR_RICE)/RSP_S2DEX.cpp \
            $(VIDEODIR_RICE)/Texture.cpp \
            $(VIDEODIR_RICE)/TextureManager.cpp \
            $(VIDEODIR_RICE)/VectorMath.cpp \
            $(VIDEODIR_RICE)/Video.cpp

ifeq ($(HAVE_NEON), 1)
	SOURCES_ASM += $(VIDEODIR_RICE)/RenderBase_neon.S
endif

# Libretro

SOURCES_C += $(LIBRETRO_DIR)/libretro.c \
					 $(LIBRETRO_DIR)/adler32.c \
					 $(LIBRETRO_DIR)/opengl_state_machine.c \
					 $(INPUT_LIBRETRO_DIR)/input_plugin.c \
					 $(AUDIO_LIBRETRO_DIR)/audio_plugin.c \
					 $(AUDIO_LIBRETRO_DIR)/audio_resampler_driver.c \
					 $(AUDIO_LIBRETRO_DIR)/drivers_resampler/sinc.c \
					 $(AUDIO_LIBRETRO_DIR)/drivers_resampler/nearest.c \
					 $(AUDIO_LIBRETRO_DIR)/drivers_resampler/cc_resampler.c \
					 $(AUDIO_LIBRETRO_DIR)/audio_utils.c

ifeq ($(HAVE_CUSTOMCRC), 1)
SOURCES_C += $(LIBRETRO_DIR)/glide64_crc.c
else
SOURCES_C += $(LIBRETRO_DIR)/libretro_crc.c
endif

SOURCES_GLN64VIDEO := $(VIDEODIR_GLN64)/3DMath.c \
            $(VIDEODIR_GLN64)/glN64Config.c \
            $(VIDEODIR_GLN64)/Hash.c \
            $(VIDEODIR_GLN64)/DepthBuffer.c \
            $(VIDEODIR_GLN64)/F3DCBFD.c \
            $(VIDEODIR_GLN64)/F3D.c \
            $(VIDEODIR_GLN64)/F3DDKR.c \
            $(VIDEODIR_GLN64)/F3DEX2.c \
            $(VIDEODIR_GLN64)/F3DEX.c \
            $(VIDEODIR_GLN64)/F3DPD.c \
            $(VIDEODIR_GLN64)/F3DWRUS.c \
            $(VIDEODIR_GLN64)/GBI.c \
            $(VIDEODIR_GLN64)/gDP.c \
            $(VIDEODIR_GLN64)/gles2N64.c \
            $(VIDEODIR_GLN64)/gSP.c \
            $(VIDEODIR_GLN64)/L3D.c \
            $(VIDEODIR_GLN64)/L3DEX2.c \
            $(VIDEODIR_GLN64)/L3DEX.c \
            $(VIDEODIR_GLN64)/N64.c \
            $(VIDEODIR_GLN64)/OpenGL.c \
            $(VIDEODIR_GLN64)/RDP.c \
            $(VIDEODIR_GLN64)/gles2n64_rsp.c \
            $(VIDEODIR_GLN64)/S2DEX2.c \
            $(VIDEODIR_GLN64)/S2DEX.c \
            $(VIDEODIR_GLN64)/ShaderCombiner.c \
            $(VIDEODIR_GLN64)/Textures.c \
            $(VIDEODIR_GLN64)/VI.c

SOURCES_C	+= $(SOURCES_GLN64VIDEO)

ifeq ($(HAVE_NEON), 1)
	SOURCES_C   += $(VIDEODIR_GLN64)/3DMathNeon.c \
						$(VIDEODIR_GLN64)/gSPNeon.c

	SOURCES_ASM	+= $(AUDIO_LIBRETRO_DIR)/audio_utils_neon.S \
						$(AUDIO_LIBRETRO_DIR)/drivers_resampler/sinc_neon.S \
						$(AUDIO_LIBRETRO_DIR)/drivers_resampler/cc_resampler_neon.S
endif

# Glide64
ifeq ($(GLIDE64MK2), 1)
SOURCES_CXX += $(VIDEODIR_GLIDE)/Glide64/3dmath.cpp \
					$(VIDEODIR_GLIDE)/Glide64/Combine.cpp \
					$(VIDEODIR_GLIDE)/Glide64/Debugger.cpp \
					$(VIDEODIR_GLIDE)/Glide64/DepthBufferRender.cpp \
					$(VIDEODIR_GLIDE)/Glide64/FBtoScreen.cpp \
					$(VIDEODIR_GLIDE)/Glide64/Main.cpp \
					$(VIDEODIR_GLIDE)/Glide64/rdp.cpp \
					$(VIDEODIR_GLIDE)/Glide64/TexCache.cpp \
					$(VIDEODIR_GLIDE)/Glide64/Util.cpp

SOURCES_CXX += $(VIDEODIR_GLIDE)/Glide64/Glide64_Ini.cpp \
					$(VIDEODIR_GLIDE)/Glide64/Glide64_UCode.cpp \

#SOURCES_CXX += $(VIDEODIR_GLIDE)/Glide64/Glide64_Ini_Default.cpp \
					$(VIDEODIR_GLIDE)/Glide64/Glide64_UCode_Default.cpp \

SOURCES_CXX  += $(VIDEODIR_GLIDE)/Glitch64/textures_common.cpp \
					 $(VIDEODIR_GLIDE)/Glitch64/glitchmain_common.cpp

#ifeq ($(GLES), 1)
SOURCES_CXX += $(VIDEODIR_GLIDE)/Glitch64/OGLEScombiner.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/OGLESgeometry_VBO.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/OGLESglitchmain.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/OGLEStextures.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/glitchlog.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/glitchgeometry.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/glitchtextureman_hash.cpp
					#$(VIDEODIR_GLIDE)/Glitch64/glitchdebug.cpp
#else #SOURCES_CXX += $(VIDEODIR_GLIDE)/Glitch64/OGLcombiner.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/OGLgeometry.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/OGLglitchmain.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/OGLtextures.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/glitchlog.cpp \
					$(VIDEODIR_GLIDE)/Glitch64/glitchtextureman_hash.cpp
					#$(VIDEODIR_GLIDE)/Glitch64/glitchdebug.cpp
#endif

else
#Glide 64
SOURCES_C += $(VIDEODIR_GLIDE)/Glide64/glide64_3dmath.c \
            $(VIDEODIR_GLIDE)/Glide64/FBtoScreen.c \
            $(VIDEODIR_GLIDE)/Glide64/Glide64_Ini.c \
            $(VIDEODIR_GLIDE)/Glide64/glidemain.c \
            $(VIDEODIR_GLIDE)/Glide64/glide64_util.c \
				$(VIDEODIR_GLIDE)/Glide64/Glide64_UCode.c \
            $(VIDEODIR_GLIDE)/Glide64/glide64_rdp.c \
            $(VIDEODIR_GLIDE)/Glide64/Combine.c \
            $(VIDEODIR_GLIDE)/Glide64/DepthBufferRender.c \
            $(VIDEODIR_GLIDE)/Glide64/TexCache.c

# Glitch64
SOURCES_C   += $(VIDEODIR_GLIDE)/Glitch64/glitch64_combiner.c \
            $(VIDEODIR_GLIDE)/Glitch64/geometry.c \
            $(VIDEODIR_GLIDE)/Glitch64/glitchmain.c \
            $(VIDEODIR_GLIDE)/Glitch64/glitch64_textures.c
endif

### Angrylion's renderer ###
SOURCES_C +=  $(VIDEODIR_ANGRYLION)/n64video_main.c \
						  $(VIDEODIR_ANGRYLION)/n64video_vi.c \
						  $(VIDEODIR_ANGRYLION)/n64video_rdp.c \
						  $(VIDEODIR_ANGRYLION)/n64video.c

ifeq ($(GLES), 1)
	GLFLAGS += -DGLES -DHAVE_OPENGLES2 -DDISABLE_3POINT -DUSE_GLES
	SOURCES_C += $(LIBRETRO_DIR)/glsym/glsym_es2.c
else
	#Texture sampling enhancements.
	GLFLAGS += -DENABLE_3POINT -DENABLE_TEXTURE_SAMPLING

	GLFLAGS += -DHAVE_OPENGL
	SOURCES_C += $(LIBRETRO_DIR)/glsym/glsym_gl.c
endif

SOURCES_C += $(LIBRETRO_DIR)/glsym/rglgen.c
